[{"name":"ASSERT","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t/index.html","searchKeys":["ASSERT","ASSERT","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT"]},{"name":"ASSERT_CONTENT_DESCRIPTION_CONTAINS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_CONTAINS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-c-o-n-t-e-n-t_-d-e-s-c-r-i-p-t-i-o-n_-c-o-n-t-a-i-n-s/index.html","searchKeys":["ASSERT_CONTENT_DESCRIPTION_CONTAINS","ASSERT_CONTENT_DESCRIPTION_CONTAINS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_CONTAINS"]},{"name":"ASSERT_CONTENT_DESCRIPTION_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-c-o-n-t-e-n-t_-d-e-s-c-r-i-p-t-i-o-n_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_CONTENT_DESCRIPTION_EQUALS","ASSERT_CONTENT_DESCRIPTION_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_CONTENT_DESCRIPTION_EQUALS"]},{"name":"ASSERT_DOES_NOT_EXIST","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_DOES_NOT_EXIST","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-d-o-e-s_-n-o-t_-e-x-i-s-t/index.html","searchKeys":["ASSERT_DOES_NOT_EXIST","ASSERT_DOES_NOT_EXIST","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_DOES_NOT_EXIST"]},{"name":"ASSERT_EXISTS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_EXISTS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-e-x-i-s-t-s/index.html","searchKeys":["ASSERT_EXISTS","ASSERT_EXISTS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_EXISTS"]},{"name":"ASSERT_HAS_CLICK_ACTION","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_CLICK_ACTION","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-h-a-s_-c-l-i-c-k_-a-c-t-i-o-n/index.html","searchKeys":["ASSERT_HAS_CLICK_ACTION","ASSERT_HAS_CLICK_ACTION","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_CLICK_ACTION"]},{"name":"ASSERT_HAS_NO_CLICK_ACTION","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_NO_CLICK_ACTION","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-h-a-s_-n-o_-c-l-i-c-k_-a-c-t-i-o-n/index.html","searchKeys":["ASSERT_HAS_NO_CLICK_ACTION","ASSERT_HAS_NO_CLICK_ACTION","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_HAS_NO_CLICK_ACTION"]},{"name":"ASSERT_RANGE_INFO_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_RANGE_INFO_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-r-a-n-g-e_-i-n-f-o_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_RANGE_INFO_EQUALS","ASSERT_RANGE_INFO_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_RANGE_INFO_EQUALS"]},{"name":"ASSERT_TEXT_CONTAINS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_CONTAINS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-t-e-x-t_-c-o-n-t-a-i-n-s/index.html","searchKeys":["ASSERT_TEXT_CONTAINS","ASSERT_TEXT_CONTAINS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_CONTAINS"]},{"name":"ASSERT_TEXT_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-t-e-x-t_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_TEXT_EQUALS","ASSERT_TEXT_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_TEXT_EQUALS"]},{"name":"ASSERT_VALUE_EQUALS","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_VALUE_EQUALS","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-a-s-s-e-r-t_-v-a-l-u-e_-e-q-u-a-l-s/index.html","searchKeys":["ASSERT_VALUE_EQUALS","ASSERT_VALUE_EQUALS","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.ASSERT_VALUE_EQUALS"]},{"name":"BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","description":"io.github.kakaocup.compose.node.core.BaseNode.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/-base-node.html","searchKeys":["BaseNode","BaseNode<T> BaseNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","io.github.kakaocup.compose.node.core.BaseNode.BaseNode"]},{"name":"ComposeDelegate ComposeDelegate(NodeProvider nodeProvider, ComposeDelegate parentDelegate)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.ComposeDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/-compose-delegate.html","searchKeys":["ComposeDelegate","ComposeDelegate ComposeDelegate(NodeProvider nodeProvider, ComposeDelegate parentDelegate)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.ComposeDelegate"]},{"name":"ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.core.BaseNode.getDelegate","location":"compose/io.github.kakaocup.compose.node.core/-base-node/get-delegate.html","searchKeys":["getDelegate","ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.core.BaseNode.getDelegate"]},{"name":"ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.element.ComposeScreen.getDelegate","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/get-delegate.html","searchKeys":["getDelegate","ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.element.ComposeScreen.getDelegate"]},{"name":"ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.element.KNode.getDelegate","location":"compose/io.github.kakaocup.compose.node.element/-k-node/get-delegate.html","searchKeys":["getDelegate","ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.element.KNode.getDelegate"]},{"name":"ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.getDelegate","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-node/get-delegate.html","searchKeys":["getDelegate","ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.getDelegate"]},{"name":"ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getDelegate","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-delegate.html","searchKeys":["getDelegate","ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getDelegate"]},{"name":"ComposeInteraction ComposeInteraction(NodeProvider nodeProvider)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.ComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/-compose-interaction.html","searchKeys":["ComposeInteraction","ComposeInteraction ComposeInteraction(NodeProvider nodeProvider)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.ComposeInteraction"]},{"name":"ComposeInteraction getInteraction()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getInteraction","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-interaction.html","searchKeys":["getInteraction","ComposeInteraction getInteraction()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getInteraction"]},{"name":"ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-compose-screen.html","searchKeys":["ComposeScreen","ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen"]},{"name":"ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-compose-screen.html","searchKeys":["ComposeScreen","ComposeScreen<T> ComposeScreen(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.element.ComposeScreen.ComposeScreen"]},{"name":"Function0<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>> getGlobalInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getGlobalInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-global-interceptor.html","searchKeys":["getGlobalInterceptor","Function0<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>> getGlobalInterceptor()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getGlobalInterceptor"]},{"name":"Function0<Iterable<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>>> getNodeInterceptors()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getNodeInterceptors","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-node-interceptors.html","searchKeys":["getNodeInterceptors","Function0<Iterable<Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction>>> getNodeInterceptors()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getNodeInterceptors"]},{"name":"IS_DISPLAYED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_DISPLAYED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-d-i-s-p-l-a-y-e-d/index.html","searchKeys":["IS_DISPLAYED","IS_DISPLAYED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_DISPLAYED"]},{"name":"IS_ENABLED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ENABLED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-e-n-a-b-l-e-d/index.html","searchKeys":["IS_ENABLED","IS_ENABLED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ENABLED"]},{"name":"IS_FOCUSED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_FOCUSED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-f-o-c-u-s-e-d/index.html","searchKeys":["IS_FOCUSED","IS_FOCUSED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_FOCUSED"]},{"name":"IS_NOT_DISPLAYED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_DISPLAYED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-d-i-s-p-l-a-y-e-d/index.html","searchKeys":["IS_NOT_DISPLAYED","IS_NOT_DISPLAYED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_DISPLAYED"]},{"name":"IS_NOT_ENABLED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_ENABLED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-e-n-a-b-l-e-d/index.html","searchKeys":["IS_NOT_ENABLED","IS_NOT_ENABLED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_ENABLED"]},{"name":"IS_NOT_FOCUSED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_FOCUSED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-f-o-c-u-s-e-d/index.html","searchKeys":["IS_NOT_FOCUSED","IS_NOT_FOCUSED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_FOCUSED"]},{"name":"IS_NOT_SELECTED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_SELECTED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-n-o-t_-s-e-l-e-c-t-e-d/index.html","searchKeys":["IS_NOT_SELECTED","IS_NOT_SELECTED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_NOT_SELECTED"]},{"name":"IS_OFF","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_OFF","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-o-f-f/index.html","searchKeys":["IS_OFF","IS_OFF","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_OFF"]},{"name":"IS_ON","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ON","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-o-n/index.html","searchKeys":["IS_ON","IS_ON","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_ON"]},{"name":"IS_SELECTABLE","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTABLE","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-s-e-l-e-c-t-a-b-l-e/index.html","searchKeys":["IS_SELECTABLE","IS_SELECTABLE","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTABLE"]},{"name":"IS_SELECTED","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTED","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-s-e-l-e-c-t-e-d/index.html","searchKeys":["IS_SELECTED","IS_SELECTED","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_SELECTED"]},{"name":"IS_TOGGLEABLE","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_TOGGLEABLE","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/-i-s_-t-o-g-g-l-e-a-b-l-e/index.html","searchKeys":["IS_TOGGLEABLE","IS_TOGGLEABLE","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.IS_TOGGLEABLE"]},{"name":"Interception<T> Interception<T extends Any>(Boolean isOverride, T interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interception.Interception","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/-interception.html","searchKeys":["Interception","Interception<T> Interception<T extends Any>(Boolean isOverride, T interceptor)","io.github.kakaocup.compose.intercept.base.Interception.Interception"]},{"name":"Interceptor.Builder<INTERACTION, ASSERTION, ACTION> Interceptor.Builder()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.Interceptor.Builder","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/-interceptor.-builder.html","searchKeys":["Builder","Interceptor.Builder<INTERACTION, ASSERTION, ACTION> Interceptor.Builder()","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.Interceptor.Builder"]},{"name":"Interceptor.Configuration Interceptor.Configuration(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> composeInterceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.Interceptor.Configuration","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/-interceptor.-configuration.html","searchKeys":["Configuration","Interceptor.Configuration Interceptor.Configuration(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> composeInterceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.Interceptor.Configuration"]},{"name":"Interceptor.Configurator Interceptor.Configurator()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.Interceptor.Configurator","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/-interceptor.-configurator.html","searchKeys":["Configurator","Interceptor.Configurator Interceptor.Configurator()","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.Interceptor.Configurator"]},{"name":"Interceptor<INTERACTION, ASSERTION, ACTION> Interceptor<INTERACTION extends Any, ASSERTION extends Any, ACTION extends Any>(Interception<Function2<INTERACTION, ASSERTION, Unit>> onCheck, Interception<Function2<INTERACTION, ACTION, Unit>> onPerform, Interception<Function1<INTERACTION, Unit>> onAll)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Interceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-interceptor.html","searchKeys":["Interceptor","Interceptor<INTERACTION, ASSERTION, ACTION> Interceptor<INTERACTION extends Any, ASSERTION extends Any, ACTION extends Any>(Interception<Function2<INTERACTION, ASSERTION, Unit>> onCheck, Interception<Function2<INTERACTION, ACTION, Unit>> onPerform, Interception<Function1<INTERACTION, Unit>> onAll)","io.github.kakaocup.compose.intercept.base.Interceptor.Interceptor"]},{"name":"KLazyListItemBuilder KLazyListItemBuilder()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.KLazyListItemBuilder","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/-k-lazy-list-item-builder.html","searchKeys":["KLazyListItemBuilder","KLazyListItemBuilder KLazyListItemBuilder()","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.KLazyListItemBuilder"]},{"name":"KLazyListItemNode<T> KLazyListItemNode(SemanticsNode semanticNode, SemanticsNodeInteractionsProvider semanticsProvider)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.KLazyListItemNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-node/-k-lazy-list-item-node.html","searchKeys":["KLazyListItemNode","KLazyListItemNode<T> KLazyListItemNode(SemanticsNode semanticNode, SemanticsNodeInteractionsProvider semanticsProvider)","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode.KLazyListItemNode"]},{"name":"KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/-k-lazy-list-node.html","searchKeys":["KLazyListNode","KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode"]},{"name":"KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/-k-lazy-list-node.html","searchKeys":["KLazyListNode","KLazyListNode KLazyListNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, Function1<KLazyListItemBuilder, Unit> itemTypeBuilder, Function1<Integer, SemanticsMatcher> positionMatcher)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.KLazyListNode"]},{"name":"KListItemType<T> KListItemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType.KListItemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/-k-list-item-type.html","searchKeys":["KListItemType","KListItemType<T> KListItemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","io.github.kakaocup.compose.node.element.lazylist.KListItemType.KListItemType"]},{"name":"KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","description":"io.github.kakaocup.compose.node.element.KNode.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/-k-node.html","searchKeys":["KNode","KNode KNode(SemanticsNodeInteractionsProvider semanticsProvider, NodeMatcher nodeMatcher, BaseNode<?> parentNode)","io.github.kakaocup.compose.node.element.KNode.KNode"]},{"name":"LazyListItemProvisionException LazyListItemProvisionException(KClass<?> itemNodeClazz)","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.LazyListItemProvisionException","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/-lazy-list-item-provision-exception.html","searchKeys":["LazyListItemProvisionException","LazyListItemProvisionException LazyListItemProvisionException(KClass<?> itemNodeClazz)","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.LazyListItemProvisionException"]},{"name":"NodeMatcher NodeMatcher(SemanticsMatcher matcher, Integer position, Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.NodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/-node-matcher.html","searchKeys":["NodeMatcher","NodeMatcher NodeMatcher(SemanticsMatcher matcher, Integer position, Boolean useUnmergedTree)","io.github.kakaocup.compose.node.builder.NodeMatcher.NodeMatcher"]},{"name":"NodeProvider NodeProvider(NodeMatcher nodeMatcher, SemanticsNodeInteractionsProvider semanticsProvider)","description":"io.github.kakaocup.compose.node.builder.NodeProvider.NodeProvider","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/-node-provider.html","searchKeys":["NodeProvider","NodeProvider NodeProvider(NodeMatcher nodeMatcher, SemanticsNodeInteractionsProvider semanticsProvider)","io.github.kakaocup.compose.node.builder.NodeProvider.NodeProvider"]},{"name":"PERFORM_CLICK","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_CLICK","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-c-l-i-c-k/index.html","searchKeys":["PERFORM_CLICK","PERFORM_CLICK","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_CLICK"]},{"name":"PERFORM_GESTURE","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_GESTURE","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-g-e-s-t-u-r-e/index.html","searchKeys":["PERFORM_GESTURE","PERFORM_GESTURE","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_GESTURE"]},{"name":"PERFORM_IME_ACTION","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_IME_ACTION","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-i-m-e_-a-c-t-i-o-n/index.html","searchKeys":["PERFORM_IME_ACTION","PERFORM_IME_ACTION","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_IME_ACTION"]},{"name":"PERFORM_SCROLL_TO","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o/index.html","searchKeys":["PERFORM_SCROLL_TO","PERFORM_SCROLL_TO","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO"]},{"name":"PERFORM_SCROLL_TO_INDEX","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_INDEX","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-i-n-d-e-x/index.html","searchKeys":["PERFORM_SCROLL_TO_INDEX","PERFORM_SCROLL_TO_INDEX","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_INDEX"]},{"name":"PERFORM_SCROLL_TO_KEY","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_KEY","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-k-e-y/index.html","searchKeys":["PERFORM_SCROLL_TO_KEY","PERFORM_SCROLL_TO_KEY","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_KEY"]},{"name":"PERFORM_SCROLL_TO_NODE","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_NODE","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-c-r-o-l-l_-t-o_-n-o-d-e/index.html","searchKeys":["PERFORM_SCROLL_TO_NODE","PERFORM_SCROLL_TO_NODE","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SCROLL_TO_NODE"]},{"name":"PERFORM_SEMANTICS_ACTION","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SEMANTICS_ACTION","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/-p-e-r-f-o-r-m_-s-e-m-a-n-t-i-c-s_-a-c-t-i-o-n/index.html","searchKeys":["PERFORM_SEMANTICS_ACTION","PERFORM_SEMANTICS_ACTION","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.PERFORM_SEMANTICS_ACTION"]},{"name":"PERFORM_TEXT_CLEARANCE","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_CLEARANCE","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-c-l-e-a-r-a-n-c-e/index.html","searchKeys":["PERFORM_TEXT_CLEARANCE","PERFORM_TEXT_CLEARANCE","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_CLEARANCE"]},{"name":"PERFORM_TEXT_INPUT","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-i-n-p-u-t/index.html","searchKeys":["PERFORM_TEXT_INPUT","PERFORM_TEXT_INPUT","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT"]},{"name":"PERFORM_TEXT_INPUT_SELECTION","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT_SELECTION","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-i-n-p-u-t_-s-e-l-e-c-t-i-o-n/index.html","searchKeys":["PERFORM_TEXT_INPUT_SELECTION","PERFORM_TEXT_INPUT_SELECTION","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_INPUT_SELECTION"]},{"name":"PERFORM_TEXT_REPLACEMENT","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_REPLACEMENT","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/-p-e-r-f-o-r-m_-t-e-x-t_-r-e-p-l-a-c-e-m-e-n-t/index.html","searchKeys":["PERFORM_TEXT_REPLACEMENT","PERFORM_TEXT_REPLACEMENT","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.PERFORM_TEXT_REPLACEMENT"]},{"name":"String getMessage()","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.getMessage","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/get-message.html","searchKeys":["getMessage","String getMessage()","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.getMessage"]},{"name":"String toString()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.toString","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/to-string.html","searchKeys":["toString","String toString()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.toString"]},{"name":"Throwable getCause()","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.getCause","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/get-cause.html","searchKeys":["getCause","Throwable getCause()","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException.getCause"]},{"name":"T perform(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.perform","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/perform.html","searchKeys":["perform","T perform(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.perform"]},{"name":"Unit assert(SemanticsMatcher matcher, Function0<String> messagePrefixOnError)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assert","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert.html","searchKeys":["assert","Unit assert(SemanticsMatcher matcher, Function0<String> messagePrefixOnError)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assert"]},{"name":"Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionContains","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-content-description-contains.html","searchKeys":["assertContentDescriptionContains","Unit assertContentDescriptionContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionContains"]},{"name":"Unit assertContentDescriptionEquals(String values)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-content-description-equals.html","searchKeys":["assertContentDescriptionEquals","Unit assertContentDescriptionEquals(String values)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertContentDescriptionEquals"]},{"name":"Unit assertDoesNotExist()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertDoesNotExist","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-does-not-exist.html","searchKeys":["assertDoesNotExist","Unit assertDoesNotExist()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertDoesNotExist"]},{"name":"Unit assertExists(String errorMessageOnFail)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertExists","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-exists.html","searchKeys":["assertExists","Unit assertExists(String errorMessageOnFail)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertExists"]},{"name":"Unit assertHasClickAction()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasClickAction","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-has-click-action.html","searchKeys":["assertHasClickAction","Unit assertHasClickAction()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasClickAction"]},{"name":"Unit assertHasNoClickAction()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasNoClickAction","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-has-no-click-action.html","searchKeys":["assertHasNoClickAction","Unit assertHasNoClickAction()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertHasNoClickAction"]},{"name":"Unit assertIsDisplayed()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsDisplayed","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-displayed.html","searchKeys":["assertIsDisplayed","Unit assertIsDisplayed()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsDisplayed"]},{"name":"Unit assertIsEnabled()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsEnabled","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-enabled.html","searchKeys":["assertIsEnabled","Unit assertIsEnabled()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsEnabled"]},{"name":"Unit assertIsFocused()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsFocused","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-focused.html","searchKeys":["assertIsFocused","Unit assertIsFocused()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsFocused"]},{"name":"Unit assertIsNotDisplayed()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotDisplayed","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-displayed.html","searchKeys":["assertIsNotDisplayed","Unit assertIsNotDisplayed()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotDisplayed"]},{"name":"Unit assertIsNotEnabled()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotEnabled","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-enabled.html","searchKeys":["assertIsNotEnabled","Unit assertIsNotEnabled()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotEnabled"]},{"name":"Unit assertIsNotFocused()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotFocused","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-focused.html","searchKeys":["assertIsNotFocused","Unit assertIsNotFocused()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotFocused"]},{"name":"Unit assertIsNotSelected()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotSelected","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-not-selected.html","searchKeys":["assertIsNotSelected","Unit assertIsNotSelected()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsNotSelected"]},{"name":"Unit assertIsOff()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOff","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-off.html","searchKeys":["assertIsOff","Unit assertIsOff()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOff"]},{"name":"Unit assertIsOn()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOn","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-on.html","searchKeys":["assertIsOn","Unit assertIsOn()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsOn"]},{"name":"Unit assertIsSelectable()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelectable","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-selectable.html","searchKeys":["assertIsSelectable","Unit assertIsSelectable()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelectable"]},{"name":"Unit assertIsSelected()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelected","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-selected.html","searchKeys":["assertIsSelected","Unit assertIsSelected()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsSelected"]},{"name":"Unit assertIsToggleable()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsToggleable","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-is-toggleable.html","searchKeys":["assertIsToggleable","Unit assertIsToggleable()","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertIsToggleable"]},{"name":"Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertRangeInfoEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-range-info-equals.html","searchKeys":["assertRangeInfoEquals","Unit assertRangeInfoEquals(ProgressBarRangeInfo value)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertRangeInfoEquals"]},{"name":"Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextContains","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-text-contains.html","searchKeys":["assertTextContains","Unit assertTextContains(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextContains"]},{"name":"Unit assertTextEquals(String values, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-text-equals.html","searchKeys":["assertTextEquals","Unit assertTextEquals(String values, Boolean includeEditableText)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertTextEquals"]},{"name":"Unit assertValueEquals(String value)","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.assertValueEquals","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/assert-value-equals.html","searchKeys":["assertValueEquals","Unit assertValueEquals(String value)","io.github.kakaocup.compose.node.assertion.NodeAssertions.assertValueEquals"]},{"name":"Unit check(ASSERTION assertion)","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.check","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/check.html","searchKeys":["check","Unit check(ASSERTION assertion)","io.github.kakaocup.compose.intercept.delegate.Delegate.check"]},{"name":"Unit check(ComposeAssertion assertion)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.check","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/check.html","searchKeys":["check","Unit check(ComposeAssertion assertion)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.check"]},{"name":"Unit intercept(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.intercept","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/intercept.html","searchKeys":["intercept","Unit intercept(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.intercept"]},{"name":"Unit invoke(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.core.KDSL.invoke","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/invoke.html","searchKeys":["invoke","Unit invoke(Function1<T, Unit> function)","io.github.kakaocup.compose.node.core.KDSL.invoke"]},{"name":"Unit perform(ACTION action)","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.perform","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/perform.html","searchKeys":["perform","Unit perform(ACTION action)","io.github.kakaocup.compose.intercept.delegate.Delegate.perform"]},{"name":"Unit perform(ComposeAction action)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.perform","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/perform.html","searchKeys":["perform","Unit perform(ComposeAction action)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.perform"]},{"name":"Unit performClick()","description":"io.github.kakaocup.compose.node.action.NodeActions.performClick","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-click.html","searchKeys":["performClick","Unit performClick()","io.github.kakaocup.compose.node.action.NodeActions.performClick"]},{"name":"Unit performGesture(Function1<GestureScope, Unit> block)","description":"io.github.kakaocup.compose.node.action.NodeActions.performGesture","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-gesture.html","searchKeys":["performGesture","Unit performGesture(Function1<GestureScope, Unit> block)","io.github.kakaocup.compose.node.action.NodeActions.performGesture"]},{"name":"Unit performImeAction()","description":"io.github.kakaocup.compose.node.action.TextActions.performImeAction","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-ime-action.html","searchKeys":["performImeAction","Unit performImeAction()","io.github.kakaocup.compose.node.action.TextActions.performImeAction"]},{"name":"Unit performScrollTo()","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollTo","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to.html","searchKeys":["performScrollTo","Unit performScrollTo()","io.github.kakaocup.compose.node.action.NodeActions.performScrollTo"]},{"name":"Unit performScrollToIndex(Integer index)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToIndex","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-index.html","searchKeys":["performScrollToIndex","Unit performScrollToIndex(Integer index)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToIndex"]},{"name":"Unit performScrollToKey(Object key)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToKey","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-key.html","searchKeys":["performScrollToKey","Unit performScrollToKey(Object key)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToKey"]},{"name":"Unit performScrollToNode(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.action.NodeActions.performScrollToNode","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-scroll-to-node.html","searchKeys":["performScrollToNode","Unit performScrollToNode(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.action.NodeActions.performScrollToNode"]},{"name":"Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","description":"io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","Unit performSemanticsAction(SemanticsPropertyKey<AccessibilityAction<Function0<Boolean>>> key)","io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction"]},{"name":"Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","description":"io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/perform-semantics-action.html","searchKeys":["performSemanticsAction","Unit performSemanticsAction<T extends Function<Boolean>>(SemanticsPropertyKey<AccessibilityAction<T>> key, Function1<T, Unit> invocation)","io.github.kakaocup.compose.node.action.NodeActions.performSemanticsAction"]},{"name":"Unit performTextClearance()","description":"io.github.kakaocup.compose.node.action.TextActions.performTextClearance","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-clearance.html","searchKeys":["performTextClearance","Unit performTextClearance()","io.github.kakaocup.compose.node.action.TextActions.performTextClearance"]},{"name":"Unit performTextInput(String text)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextInput","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-input.html","searchKeys":["performTextInput","Unit performTextInput(String text)","io.github.kakaocup.compose.node.action.TextActions.performTextInput"]},{"name":"Unit performTextInputSelection(TextRange selection)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextInputSelection","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-input-selection.html","searchKeys":["performTextInputSelection","Unit performTextInputSelection(TextRange selection)","io.github.kakaocup.compose.node.action.TextActions.performTextInputSelection"]},{"name":"Unit performTextReplacement(String text)","description":"io.github.kakaocup.compose.node.action.TextActions.performTextReplacement","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/perform-text-replacement.html","searchKeys":["performTextReplacement","Unit performTextReplacement(String text)","io.github.kakaocup.compose.node.action.TextActions.performTextReplacement"]},{"name":"Unit reset()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.reset","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/reset.html","searchKeys":["reset","Unit reset()","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.reset"]},{"name":"ViewBuilder ViewBuilder()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.ViewBuilder","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/-view-builder.html","searchKeys":["ViewBuilder","ViewBuilder ViewBuilder()","io.github.kakaocup.compose.node.builder.ViewBuilder.ViewBuilder"]},{"name":"abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.getDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/get-delegate.html","searchKeys":["getDelegate","abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable.getDelegate"]},{"name":"abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.action.NodeActions.getDelegate","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/get-delegate.html","searchKeys":["getDelegate","abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.action.NodeActions.getDelegate"]},{"name":"abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.action.TextActions.getDelegate","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/get-delegate.html","searchKeys":["getDelegate","abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.action.TextActions.getDelegate"]},{"name":"abstract ComposeDelegate getDelegate()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.getDelegate","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/get-delegate.html","searchKeys":["getDelegate","abstract ComposeDelegate getDelegate()","io.github.kakaocup.compose.node.assertion.NodeAssertions.getDelegate"]},{"name":"abstract ComposeOperationType getType()","description":"io.github.kakaocup.compose.intercept.operation.ComposeAction.getType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-action/get-type.html","searchKeys":["getType","abstract ComposeOperationType getType()","io.github.kakaocup.compose.intercept.operation.ComposeAction.getType"]},{"name":"abstract ComposeOperationType getType()","description":"io.github.kakaocup.compose.intercept.operation.ComposeAssertion.getType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-assertion/get-type.html","searchKeys":["getType","abstract ComposeOperationType getType()","io.github.kakaocup.compose.intercept.operation.ComposeAssertion.getType"]},{"name":"abstract ComposeOperationType getType()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.getType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/get-type.html","searchKeys":["getType","abstract ComposeOperationType getType()","io.github.kakaocup.compose.intercept.operation.ComposeOperation.getType"]},{"name":"abstract Function0<Interceptor<INTERACTION, ASSERTION, ACTION>> getGlobalInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getGlobalInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-global-interceptor.html","searchKeys":["getGlobalInterceptor","abstract Function0<Interceptor<INTERACTION, ASSERTION, ACTION>> getGlobalInterceptor()","io.github.kakaocup.compose.intercept.delegate.Delegate.getGlobalInterceptor"]},{"name":"abstract Function0<Iterable<Interceptor<INTERACTION, ASSERTION, ACTION>>> getNodeInterceptors()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getNodeInterceptors","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-node-interceptors.html","searchKeys":["getNodeInterceptors","abstract Function0<Iterable<Interceptor<INTERACTION, ASSERTION, ACTION>>> getNodeInterceptors()","io.github.kakaocup.compose.intercept.delegate.Delegate.getNodeInterceptors"]},{"name":"abstract INTERACTION getInteraction()","description":"io.github.kakaocup.compose.intercept.delegate.Delegate.getInteraction","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/get-interaction.html","searchKeys":["getInteraction","abstract INTERACTION getInteraction()","io.github.kakaocup.compose.intercept.delegate.Delegate.getInteraction"]},{"name":"abstract String getDescription()","description":"io.github.kakaocup.compose.intercept.operation.ComposeAction.getDescription","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-action/get-description.html","searchKeys":["getDescription","abstract String getDescription()","io.github.kakaocup.compose.intercept.operation.ComposeAction.getDescription"]},{"name":"abstract String getDescription()","description":"io.github.kakaocup.compose.intercept.operation.ComposeAssertion.getDescription","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-assertion/get-description.html","searchKeys":["getDescription","abstract String getDescription()","io.github.kakaocup.compose.intercept.operation.ComposeAssertion.getDescription"]},{"name":"abstract String getDescription()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.getDescription","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/get-description.html","searchKeys":["getDescription","abstract String getDescription()","io.github.kakaocup.compose.intercept.operation.ComposeOperation.getDescription"]},{"name":"abstract String getName()","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationType.getName","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-type/get-name.html","searchKeys":["getName","abstract String getName()","io.github.kakaocup.compose.intercept.operation.ComposeOperationType.getName"]},{"name":"abstract Unit check(ASSERTION assertion)","description":"io.github.kakaocup.compose.intercept.interaction.Interaction.check","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/check.html","searchKeys":["check","abstract Unit check(ASSERTION assertion)","io.github.kakaocup.compose.intercept.interaction.Interaction.check"]},{"name":"abstract Unit execute(View innerView)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation.execute","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/execute.html","searchKeys":["execute","abstract Unit execute(View innerView)","io.github.kakaocup.compose.intercept.operation.ComposeOperation.execute"]},{"name":"abstract Unit perform(ACTION action)","description":"io.github.kakaocup.compose.intercept.interaction.Interaction.perform","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/perform.html","searchKeys":["perform","abstract Unit perform(ACTION action)","io.github.kakaocup.compose.intercept.interaction.Interaction.perform"]},{"name":"final <ERROR CLASS> getItemTypes()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.getItemTypes","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/get-item-types.html","searchKeys":["getItemTypes","final <ERROR CLASS> getItemTypes()","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.getItemTypes"]},{"name":"final <ERROR CLASS> getItemTypes()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getItemTypes","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-item-types.html","searchKeys":["getItemTypes","final <ERROR CLASS> getItemTypes()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getItemTypes"]},{"name":"final Boolean getIsOverride()","description":"io.github.kakaocup.compose.intercept.base.Interception.getIsOverride","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/get-is-override.html","searchKeys":["getIsOverride","final Boolean getIsOverride()","io.github.kakaocup.compose.intercept.base.Interception.getIsOverride"]},{"name":"final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.node.builder.NodeMatcher.getUseUnmergedTree"]},{"name":"final Boolean getUseUnmergedTree()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.getUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/get-use-unmerged-tree.html","searchKeys":["getUseUnmergedTree","final Boolean getUseUnmergedTree()","io.github.kakaocup.compose.node.builder.ViewBuilder.getUseUnmergedTree"]},{"name":"final Function1<Integer, SemanticsMatcher> getPositionMatcher()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getPositionMatcher","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-position-matcher.html","searchKeys":["getPositionMatcher","final Function1<Integer, SemanticsMatcher> getPositionMatcher()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getPositionMatcher"]},{"name":"final Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> getProvideItem()","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType.getProvideItem","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/get-provide-item.html","searchKeys":["getProvideItem","final Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> getProvideItem()","io.github.kakaocup.compose.node.element.lazylist.KListItemType.getProvideItem"]},{"name":"final Integer getOrdinal()","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getOrdinal","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getOrdinal"]},{"name":"final Integer getOrdinal()","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getOrdinal","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getOrdinal"]},{"name":"final Integer getOrdinal()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getOrdinal","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/get-ordinal.html","searchKeys":["getOrdinal","final Integer getOrdinal()","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getOrdinal"]},{"name":"final Integer getPosition()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getPosition","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-position.html","searchKeys":["getPosition","final Integer getPosition()","io.github.kakaocup.compose.node.builder.NodeMatcher.getPosition"]},{"name":"final Interception<Function1<INTERACTION, Unit>> getOnAll()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnAll","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-all.html","searchKeys":["getOnAll","final Interception<Function1<INTERACTION, Unit>> getOnAll()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnAll"]},{"name":"final Interception<Function2<INTERACTION, ACTION, Unit>> getOnPerform()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnPerform","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-perform.html","searchKeys":["getOnPerform","final Interception<Function2<INTERACTION, ACTION, Unit>> getOnPerform()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnPerform"]},{"name":"final Interception<Function2<INTERACTION, ASSERTION, Unit>> getOnCheck()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.getOnCheck","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/get-on-check.html","searchKeys":["getOnCheck","final Interception<Function2<INTERACTION, ASSERTION, Unit>> getOnCheck()","io.github.kakaocup.compose.intercept.base.Interceptor.getOnCheck"]},{"name":"final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getComposeInterceptor()","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.getComposeInterceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/get-compose-interceptor.html","searchKeys":["getComposeInterceptor","final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getComposeInterceptor()","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration.getComposeInterceptor"]},{"name":"final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getCurrentInterceptor()","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getCurrentInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/get-current-interceptor.html","searchKeys":["getCurrentInterceptor","final Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> getCurrentInterceptor()","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.getCurrentInterceptor"]},{"name":"final KNode onNode(Function1<ViewBuilder, Unit> viewBuilderAction)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.onNode","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/on-node.html","searchKeys":["onNode","final KNode onNode(Function1<ViewBuilder, Unit> viewBuilderAction)","io.github.kakaocup.compose.node.element.ComposeScreen.onNode"]},{"name":"final NodeMatcher build()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.build","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/build.html","searchKeys":["build","final NodeMatcher build()","io.github.kakaocup.compose.node.builder.ViewBuilder.build"]},{"name":"final NodeMatcher getNodeMatcher()","description":"io.github.kakaocup.compose.node.builder.NodeProvider.getNodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/get-node-matcher.html","searchKeys":["getNodeMatcher","final NodeMatcher getNodeMatcher()","io.github.kakaocup.compose.node.builder.NodeProvider.getNodeMatcher"]},{"name":"final NodeProvider getNodeProvider()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getNodeProvider","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/get-node-provider.html","searchKeys":["getNodeProvider","final NodeProvider getNodeProvider()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getNodeProvider"]},{"name":"final N child<N extends Any>(Function1<ViewBuilder, Unit> function)","description":"io.github.kakaocup.compose.node.core.BaseNode.child","location":"compose/io.github.kakaocup.compose.node.core/-base-node/child.html","searchKeys":["child","final N child<N extends Any>(Function1<ViewBuilder, Unit> function)","io.github.kakaocup.compose.node.core.BaseNode.child"]},{"name":"final SemanticsMatcher getMatcher()","description":"io.github.kakaocup.compose.node.builder.NodeMatcher.getMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/get-matcher.html","searchKeys":["getMatcher","final SemanticsMatcher getMatcher()","io.github.kakaocup.compose.node.builder.NodeMatcher.getMatcher"]},{"name":"final SemanticsMatcher getSemanticsMatcher()","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getSemanticsMatcher","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/get-semantics-matcher.html","searchKeys":["getSemanticsMatcher","final SemanticsMatcher getSemanticsMatcher()","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.getSemanticsMatcher"]},{"name":"final SemanticsNodeInteraction getSemanticsNodeInteraction()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getSemanticsNodeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/get-semantics-node-interaction.html","searchKeys":["getSemanticsNodeInteraction","final SemanticsNodeInteraction getSemanticsNodeInteraction()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.getSemanticsNodeInteraction"]},{"name":"final SemanticsNodeInteraction provideSemanticsNodeInteraction()","description":"io.github.kakaocup.compose.node.builder.NodeProvider.provideSemanticsNodeInteraction","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/provide-semantics-node-interaction.html","searchKeys":["provideSemanticsNodeInteraction","final SemanticsNodeInteraction provideSemanticsNodeInteraction()","io.github.kakaocup.compose.node.builder.NodeProvider.provideSemanticsNodeInteraction"]},{"name":"final String getName()","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getName","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/get-name.html","searchKeys":["getName","final String getName()","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType.getName"]},{"name":"final String getName()","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getName","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/get-name.html","searchKeys":["getName","final String getName()","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType.getName"]},{"name":"final String getName()","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getName","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/get-name.html","searchKeys":["getName","final String getName()","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType.getName"]},{"name":"final T childWith<T extends KLazyListItemNode<?>>(Function1<ViewBuilder, Unit> childMatcher)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childWith","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/child-with.html","searchKeys":["childWith","final T childWith<T extends KLazyListItemNode<?>>(Function1<ViewBuilder, Unit> childMatcher)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childWith"]},{"name":"final T getInterceptor()","description":"io.github.kakaocup.compose.intercept.base.Interception.getInterceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/get-interceptor.html","searchKeys":["getInterceptor","final T getInterceptor()","io.github.kakaocup.compose.intercept.base.Interception.getInterceptor"]},{"name":"final T onComposeScreen<T extends ComposeScreen<T>>(SemanticsNodeInteractionsProvider semanticsProvider, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-companion/on-compose-screen.html","searchKeys":["onComposeScreen","final T onComposeScreen<T extends ComposeScreen<T>>(SemanticsNodeInteractionsProvider semanticsProvider, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.ComposeScreen.Companion.onComposeScreen"]},{"name":"final Unit addSemanticsMatcher(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.addSemanticsMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/add-semantics-matcher.html","searchKeys":["addSemanticsMatcher","final Unit addSemanticsMatcher(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.addSemanticsMatcher"]},{"name":"final Unit check(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.check","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/check.html","searchKeys":["check","final Unit check(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.check"]},{"name":"final Unit childAt<T extends KLazyListItemNode<?>>(Integer position, Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childAt","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/child-at.html","searchKeys":["childAt","final Unit childAt<T extends KLazyListItemNode<?>>(Integer position, Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.childAt"]},{"name":"final Unit firstChild<T extends KLazyListItemNode<?>>(Function1<T, Unit> function)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.firstChild","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/first-child.html","searchKeys":["firstChild","final Unit firstChild<T extends KLazyListItemNode<?>>(Function1<T, Unit> function)","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode.firstChild"]},{"name":"final Unit hasAnyAncestor(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyAncestor","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-ancestor.html","searchKeys":["hasAnyAncestor","final Unit hasAnyAncestor(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyAncestor"]},{"name":"final Unit hasAnyChild(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyChild","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-child.html","searchKeys":["hasAnyChild","final Unit hasAnyChild(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyChild"]},{"name":"final Unit hasAnyDescendant(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyDescendant","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-descendant.html","searchKeys":["hasAnyDescendant","final Unit hasAnyDescendant(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnyDescendant"]},{"name":"final Unit hasAnySibling(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnySibling","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-any-sibling.html","searchKeys":["hasAnySibling","final Unit hasAnySibling(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasAnySibling"]},{"name":"final Unit hasClickAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasClickAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-click-action.html","searchKeys":["hasClickAction","final Unit hasClickAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasClickAction"]},{"name":"final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description.html","searchKeys":["hasContentDescription","final Unit hasContentDescription(String value, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescription"]},{"name":"final Unit hasContentDescriptionExactly(String values)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-content-description-exactly.html","searchKeys":["hasContentDescriptionExactly","final Unit hasContentDescriptionExactly(String values)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasContentDescriptionExactly"]},{"name":"final Unit hasImeAction(ImeAction actionType)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasImeAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-ime-action.html","searchKeys":["hasImeAction","final Unit hasImeAction(ImeAction actionType)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasImeAction"]},{"name":"final Unit hasNoClickAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoClickAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-no-click-action.html","searchKeys":["hasNoClickAction","final Unit hasNoClickAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoClickAction"]},{"name":"final Unit hasNoScrollAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoScrollAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-no-scroll-action.html","searchKeys":["hasNoScrollAction","final Unit hasNoScrollAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasNoScrollAction"]},{"name":"final Unit hasParent(SemanticsMatcher matcher)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasParent","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-parent.html","searchKeys":["hasParent","final Unit hasParent(SemanticsMatcher matcher)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasParent"]},{"name":"final Unit hasPosition(Integer position)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasPosition","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-position.html","searchKeys":["hasPosition","final Unit hasPosition(Integer position)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasPosition"]},{"name":"final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasProgressBarRangeInfo","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-progress-bar-range-info.html","searchKeys":["hasProgressBarRangeInfo","final Unit hasProgressBarRangeInfo(ProgressBarRangeInfo rangeInfo)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasProgressBarRangeInfo"]},{"name":"final Unit hasScrollAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-action.html","searchKeys":["hasScrollAction","final Unit hasScrollAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollAction"]},{"name":"final Unit hasScrollToIndexAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToIndexAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-to-index-action.html","searchKeys":["hasScrollToIndexAction","final Unit hasScrollToIndexAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToIndexAction"]},{"name":"final Unit hasScrollToKeyAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToKeyAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-scroll-to-key-action.html","searchKeys":["hasScrollToKeyAction","final Unit hasScrollToKeyAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasScrollToKeyAction"]},{"name":"final Unit hasSetTextAction()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasSetTextAction","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-set-text-action.html","searchKeys":["hasSetTextAction","final Unit hasSetTextAction()","io.github.kakaocup.compose.node.builder.ViewBuilder.hasSetTextAction"]},{"name":"final Unit hasStateDescription(String value)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-state-description.html","searchKeys":["hasStateDescription","final Unit hasStateDescription(String value)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasStateDescription"]},{"name":"final Unit hasTestTag(String testTag)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-test-tag.html","searchKeys":["hasTestTag","final Unit hasTestTag(String testTag)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTestTag"]},{"name":"final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasText","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text.html","searchKeys":["hasText","final Unit hasText(String text, Boolean substring, Boolean ignoreCase)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasText"]},{"name":"final Unit hasTextExactly(String textValues, Boolean includeEditableText)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/has-text-exactly.html","searchKeys":["hasTextExactly","final Unit hasTextExactly(String textValues, Boolean includeEditableText)","io.github.kakaocup.compose.node.builder.ViewBuilder.hasTextExactly"]},{"name":"final Unit intercept(Function1<Interceptor.Configurator, Unit> configurator)","description":"io.github.kakaocup.compose.KakaoCompose.intercept","location":"compose/io.github.kakaocup.compose/-kakao-compose/intercept.html","searchKeys":["intercept","final Unit intercept(Function1<Interceptor.Configurator, Unit> configurator)","io.github.kakaocup.compose.KakaoCompose.intercept"]},{"name":"final Unit invoke(Function1<KakaoCompose, Unit> function)","description":"io.github.kakaocup.compose.KakaoCompose.invoke","location":"compose/io.github.kakaocup.compose/-kakao-compose/invoke.html","searchKeys":["invoke","final Unit invoke(Function1<KakaoCompose, Unit> function)","io.github.kakaocup.compose.KakaoCompose.invoke"]},{"name":"final Unit isDialog()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isDialog","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-dialog.html","searchKeys":["isDialog","final Unit isDialog()","io.github.kakaocup.compose.node.builder.ViewBuilder.isDialog"]},{"name":"final Unit isEnabled()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isEnabled","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-enabled.html","searchKeys":["isEnabled","final Unit isEnabled()","io.github.kakaocup.compose.node.builder.ViewBuilder.isEnabled"]},{"name":"final Unit isFocusable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isFocusable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-focusable.html","searchKeys":["isFocusable","final Unit isFocusable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isFocusable"]},{"name":"final Unit isFocused()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isFocused","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-focused.html","searchKeys":["isFocused","final Unit isFocused()","io.github.kakaocup.compose.node.builder.ViewBuilder.isFocused"]},{"name":"final Unit isHeading()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isHeading","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-heading.html","searchKeys":["isHeading","final Unit isHeading()","io.github.kakaocup.compose.node.builder.ViewBuilder.isHeading"]},{"name":"final Unit isNotEnabled()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotEnabled","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-enabled.html","searchKeys":["isNotEnabled","final Unit isNotEnabled()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotEnabled"]},{"name":"final Unit isNotFocusable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocusable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-focusable.html","searchKeys":["isNotFocusable","final Unit isNotFocusable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocusable"]},{"name":"final Unit isNotFocused()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocused","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-focused.html","searchKeys":["isNotFocused","final Unit isNotFocused()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotFocused"]},{"name":"final Unit isNotSelected()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isNotSelected","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-not-selected.html","searchKeys":["isNotSelected","final Unit isNotSelected()","io.github.kakaocup.compose.node.builder.ViewBuilder.isNotSelected"]},{"name":"final Unit isOff()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isOff","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-off.html","searchKeys":["isOff","final Unit isOff()","io.github.kakaocup.compose.node.builder.ViewBuilder.isOff"]},{"name":"final Unit isOn()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isOn","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-on.html","searchKeys":["isOn","final Unit isOn()","io.github.kakaocup.compose.node.builder.ViewBuilder.isOn"]},{"name":"final Unit isPopup()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isPopup","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-popup.html","searchKeys":["isPopup","final Unit isPopup()","io.github.kakaocup.compose.node.builder.ViewBuilder.isPopup"]},{"name":"final Unit isRoot()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isRoot","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-root.html","searchKeys":["isRoot","final Unit isRoot()","io.github.kakaocup.compose.node.builder.ViewBuilder.isRoot"]},{"name":"final Unit isSelectable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isSelectable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-selectable.html","searchKeys":["isSelectable","final Unit isSelectable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isSelectable"]},{"name":"final Unit isSelected()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isSelected","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-selected.html","searchKeys":["isSelected","final Unit isSelected()","io.github.kakaocup.compose.node.builder.ViewBuilder.isSelected"]},{"name":"final Unit isToggleable()","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.isToggleable","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/is-toggleable.html","searchKeys":["isToggleable","final Unit isToggleable()","io.github.kakaocup.compose.node.builder.ViewBuilder.isToggleable"]},{"name":"final Unit itemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.itemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/item-type.html","searchKeys":["itemType","final Unit itemType<T extends KLazyListItemNode<?>>(Function2<SemanticsNode, SemanticsNodeInteractionsProvider, T> provideItem)","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder.itemType"]},{"name":"final Unit onAll(Boolean isOverride, Function1<INTERACTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onAll","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-all.html","searchKeys":["onAll","final Unit onAll(Boolean isOverride, Function1<INTERACTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onAll"]},{"name":"final Unit onCheck(Boolean isOverride, Function2<INTERACTION, ASSERTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onCheck","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-check.html","searchKeys":["onCheck","final Unit onCheck(Boolean isOverride, Function2<INTERACTION, ASSERTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onCheck"]},{"name":"final Unit onComposeInteraction(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.onComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/on-compose-interaction.html","searchKeys":["onComposeInteraction","final Unit onComposeInteraction(Function1<Interceptor.Builder<ComposeInteraction, ComposeAssertion, ComposeAction>, Unit> builder)","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator.onComposeInteraction"]},{"name":"final Unit onPerform(Boolean isOverride, Function2<INTERACTION, ACTION, Unit> interceptor)","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onPerform","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/on-perform.html","searchKeys":["onPerform","final Unit onPerform(Boolean isOverride, Function2<INTERACTION, ACTION, Unit> interceptor)","io.github.kakaocup.compose.intercept.base.Interceptor.Builder.onPerform"]},{"name":"final Unit perform(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.perform","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/perform.html","searchKeys":["perform","final Unit perform(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.perform"]},{"name":"final Unit reFindNode()","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.reFindNode","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/re-find-node.html","searchKeys":["reFindNode","final Unit reFindNode()","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.reFindNode"]},{"name":"final Unit reset()","description":"io.github.kakaocup.compose.KakaoCompose.reset","location":"compose/io.github.kakaocup.compose/-kakao-compose/reset.html","searchKeys":["reset","final Unit reset()","io.github.kakaocup.compose.KakaoCompose.reset"]},{"name":"final Unit setCurrentInterceptor(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> currentInterceptor)","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.setCurrentInterceptor","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/set-current-interceptor.html","searchKeys":["setCurrentInterceptor","final Unit setCurrentInterceptor(Interceptor<ComposeInteraction, ComposeAssertion, ComposeAction> currentInterceptor)","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate.setCurrentInterceptor"]},{"name":"final Unit setSemanticsNodeInteraction(SemanticsNodeInteraction semanticsNodeInteraction)","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.setSemanticsNodeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/set-semantics-node-interaction.html","searchKeys":["setSemanticsNodeInteraction","final Unit setSemanticsNodeInteraction(SemanticsNodeInteraction semanticsNodeInteraction)","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction.setSemanticsNodeInteraction"]},{"name":"final Unit setUseUnmergedTree(Boolean useUnmergedTree)","description":"io.github.kakaocup.compose.node.builder.ViewBuilder.setUseUnmergedTree","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/set-use-unmerged-tree.html","searchKeys":["setUseUnmergedTree","final Unit setUseUnmergedTree(Boolean useUnmergedTree)","io.github.kakaocup.compose.node.builder.ViewBuilder.setUseUnmergedTree"]},{"name":"final static ComposeAction produceComposeAction(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAction","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/produce-compose-action.html","searchKeys":["produceComposeAction","final static ComposeAction produceComposeAction(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAction"]},{"name":"final static ComposeAssertion produceComposeAssertion(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAssertion","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/produce-compose-assertion.html","searchKeys":["produceComposeAssertion","final static ComposeAssertion produceComposeAssertion(ComposeOperationType type, String description, Function1<SemanticsNodeInteraction, Unit> action)","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt.produceComposeAssertion"]},{"name":"public @interface ComposeMarker","description":"io.github.kakaocup.compose.node.core.ComposeMarker","location":"compose/io.github.kakaocup.compose.node.core/-compose-marker/index.html","searchKeys":["ComposeMarker","public @interface ComposeMarker","io.github.kakaocup.compose.node.core.ComposeMarker"]},{"name":"public abstract class BaseNode<T extends BaseNode<T>> implements KDSL<T>, NodeAssertions, NodeActions, TextActions, ComposeInterceptable","description":"io.github.kakaocup.compose.node.core.BaseNode","location":"compose/io.github.kakaocup.compose.node.core/-base-node/index.html","searchKeys":["BaseNode","public abstract class BaseNode<T extends BaseNode<T>> implements KDSL<T>, NodeAssertions, NodeActions, TextActions, ComposeInterceptable","io.github.kakaocup.compose.node.core.BaseNode"]},{"name":"public abstract class KLazyListItemNode<T extends KLazyListItemNode<T>> extends BaseNode<T>","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-node/index.html","searchKeys":["KLazyListItemNode","public abstract class KLazyListItemNode<T extends KLazyListItemNode<T>> extends BaseNode<T>","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemNode"]},{"name":"public class Companion","description":"io.github.kakaocup.compose.node.element.ComposeScreen.Companion","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/-companion/index.html","searchKeys":["Companion","public class Companion","io.github.kakaocup.compose.node.element.ComposeScreen.Companion"]},{"name":"public class ComposeScreen<T extends ComposeScreen<T>> extends BaseNode<T>","description":"io.github.kakaocup.compose.node.element.ComposeScreen","location":"compose/io.github.kakaocup.compose.node.element/-compose-screen/index.html","searchKeys":["ComposeScreen","public class ComposeScreen<T extends ComposeScreen<T>> extends BaseNode<T>","io.github.kakaocup.compose.node.element.ComposeScreen"]},{"name":"public class KNode extends BaseNode<KNode>","description":"io.github.kakaocup.compose.node.element.KNode","location":"compose/io.github.kakaocup.compose.node.element/-k-node/index.html","searchKeys":["KNode","public class KNode extends BaseNode<KNode>","io.github.kakaocup.compose.node.element.KNode"]},{"name":"public class KakaoCompose","description":"io.github.kakaocup.compose.KakaoCompose","location":"compose/io.github.kakaocup.compose/-kakao-compose/index.html","searchKeys":["KakaoCompose","public class KakaoCompose","io.github.kakaocup.compose.KakaoCompose"]},{"name":"public enum ComposeBaseActionType extends Enum<NodeActions.ComposeBaseActionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/-compose-base-action-type/index.html","searchKeys":["ComposeBaseActionType","public enum ComposeBaseActionType extends Enum<NodeActions.ComposeBaseActionType> implements ComposeOperationType","io.github.kakaocup.compose.node.action.NodeActions.ComposeBaseActionType"]},{"name":"public enum ComposeBaseAssertionType extends Enum<NodeAssertions.ComposeBaseAssertionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/-compose-base-assertion-type/index.html","searchKeys":["ComposeBaseAssertionType","public enum ComposeBaseAssertionType extends Enum<NodeAssertions.ComposeBaseAssertionType> implements ComposeOperationType","io.github.kakaocup.compose.node.assertion.NodeAssertions.ComposeBaseAssertionType"]},{"name":"public enum ComposeTextActionType extends Enum<TextActions.ComposeTextActionType> implements ComposeOperationType","description":"io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/-compose-text-action-type/index.html","searchKeys":["ComposeTextActionType","public enum ComposeTextActionType extends Enum<TextActions.ComposeTextActionType> implements ComposeOperationType","io.github.kakaocup.compose.node.action.TextActions.ComposeTextActionType"]},{"name":"public final class Builder<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Builder","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-builder/index.html","searchKeys":["Builder","public final class Builder<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.base.Interceptor.Builder"]},{"name":"public final class ComposeDelegate implements Delegate<ComposeInteraction, ComposeAssertion, ComposeAction>","description":"io.github.kakaocup.compose.intercept.delegate.ComposeDelegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-delegate/index.html","searchKeys":["ComposeDelegate","public final class ComposeDelegate implements Delegate<ComposeInteraction, ComposeAssertion, ComposeAction>","io.github.kakaocup.compose.intercept.delegate.ComposeDelegate"]},{"name":"public final class ComposeInteraction implements Interaction<ComposeAssertion, ComposeAction>","description":"io.github.kakaocup.compose.intercept.interaction.ComposeInteraction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-compose-interaction/index.html","searchKeys":["ComposeInteraction","public final class ComposeInteraction implements Interaction<ComposeAssertion, ComposeAction>","io.github.kakaocup.compose.intercept.interaction.ComposeInteraction"]},{"name":"public final class ComposeOperationImplsKt","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-impls-kt/index.html","searchKeys":["ComposeOperationImplsKt","public final class ComposeOperationImplsKt","io.github.kakaocup.compose.intercept.operation.ComposeOperationImplsKt"]},{"name":"public final class Configuration","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configuration","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configuration/index.html","searchKeys":["Configuration","public final class Configuration","io.github.kakaocup.compose.intercept.base.Interceptor.Configuration"]},{"name":"public final class Configurator","description":"io.github.kakaocup.compose.intercept.base.Interceptor.Configurator","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/-configurator/index.html","searchKeys":["Configurator","public final class Configurator","io.github.kakaocup.compose.intercept.base.Interceptor.Configurator"]},{"name":"public final class Interception<T extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interception","location":"compose/io.github.kakaocup.compose.intercept.base/-interception/index.html","searchKeys":["Interception","public final class Interception<T extends Object>","io.github.kakaocup.compose.intercept.base.Interception"]},{"name":"public final class Interceptor<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.base.Interceptor","location":"compose/io.github.kakaocup.compose.intercept.base/-interceptor/index.html","searchKeys":["Interceptor","public final class Interceptor<INTERACTION extends Object, ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.base.Interceptor"]},{"name":"public final class KLazyListItemBuilder","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-item-builder/index.html","searchKeys":["KLazyListItemBuilder","public final class KLazyListItemBuilder","io.github.kakaocup.compose.node.element.lazylist.KLazyListItemBuilder"]},{"name":"public final class KLazyListNode extends BaseNode<KLazyListNode>","description":"io.github.kakaocup.compose.node.element.lazylist.KLazyListNode","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-lazy-list-node/index.html","searchKeys":["KLazyListNode","public final class KLazyListNode extends BaseNode<KLazyListNode>","io.github.kakaocup.compose.node.element.lazylist.KLazyListNode"]},{"name":"public final class KListItemType<T extends KLazyListItemNode<?>>","description":"io.github.kakaocup.compose.node.element.lazylist.KListItemType","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-k-list-item-type/index.html","searchKeys":["KListItemType","public final class KListItemType<T extends KLazyListItemNode<?>>","io.github.kakaocup.compose.node.element.lazylist.KListItemType"]},{"name":"public final class LazyListItemProvisionException extends Exception","description":"io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException","location":"compose/io.github.kakaocup.compose.node.element.lazylist/-lazy-list-item-provision-exception/index.html","searchKeys":["LazyListItemProvisionException","public final class LazyListItemProvisionException extends Exception","io.github.kakaocup.compose.node.element.lazylist.LazyListItemProvisionException"]},{"name":"public final class NodeMatcher","description":"io.github.kakaocup.compose.node.builder.NodeMatcher","location":"compose/io.github.kakaocup.compose.node.builder/-node-matcher/index.html","searchKeys":["NodeMatcher","public final class NodeMatcher","io.github.kakaocup.compose.node.builder.NodeMatcher"]},{"name":"public final class NodeProvider","description":"io.github.kakaocup.compose.node.builder.NodeProvider","location":"compose/io.github.kakaocup.compose.node.builder/-node-provider/index.html","searchKeys":["NodeProvider","public final class NodeProvider","io.github.kakaocup.compose.node.builder.NodeProvider"]},{"name":"public final class ViewBuilder","description":"io.github.kakaocup.compose.node.builder.ViewBuilder","location":"compose/io.github.kakaocup.compose.node.builder/-view-builder/index.html","searchKeys":["ViewBuilder","public final class ViewBuilder","io.github.kakaocup.compose.node.builder.ViewBuilder"]},{"name":"public interface ComposeAction implements ComposeOperation<SemanticsNodeInteraction>","description":"io.github.kakaocup.compose.intercept.operation.ComposeAction","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-action/index.html","searchKeys":["ComposeAction","public interface ComposeAction implements ComposeOperation<SemanticsNodeInteraction>","io.github.kakaocup.compose.intercept.operation.ComposeAction"]},{"name":"public interface ComposeAssertion implements ComposeOperation<SemanticsNodeInteraction>","description":"io.github.kakaocup.compose.intercept.operation.ComposeAssertion","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-assertion/index.html","searchKeys":["ComposeAssertion","public interface ComposeAssertion implements ComposeOperation<SemanticsNodeInteraction>","io.github.kakaocup.compose.intercept.operation.ComposeAssertion"]},{"name":"public interface ComposeInterceptable","description":"io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable","location":"compose/io.github.kakaocup.compose.intercept.delegate/-compose-interceptable/index.html","searchKeys":["ComposeInterceptable","public interface ComposeInterceptable","io.github.kakaocup.compose.intercept.delegate.ComposeInterceptable"]},{"name":"public interface ComposeOperation<View extends Object>","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperation","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation/index.html","searchKeys":["ComposeOperation","public interface ComposeOperation<View extends Object>","io.github.kakaocup.compose.intercept.operation.ComposeOperation"]},{"name":"public interface ComposeOperationType","description":"io.github.kakaocup.compose.intercept.operation.ComposeOperationType","location":"compose/io.github.kakaocup.compose.intercept.operation/-compose-operation-type/index.html","searchKeys":["ComposeOperationType","public interface ComposeOperationType","io.github.kakaocup.compose.intercept.operation.ComposeOperationType"]},{"name":"public interface Delegate<INTERACTION extends Interaction<ASSERTION, ACTION>, ASSERTION extends Object, ACTION extends Object> implements Interaction<ASSERTION, ACTION>","description":"io.github.kakaocup.compose.intercept.delegate.Delegate","location":"compose/io.github.kakaocup.compose.intercept.delegate/-delegate/index.html","searchKeys":["Delegate","public interface Delegate<INTERACTION extends Interaction<ASSERTION, ACTION>, ASSERTION extends Object, ACTION extends Object> implements Interaction<ASSERTION, ACTION>","io.github.kakaocup.compose.intercept.delegate.Delegate"]},{"name":"public interface Interaction<ASSERTION extends Object, ACTION extends Object>","description":"io.github.kakaocup.compose.intercept.interaction.Interaction","location":"compose/io.github.kakaocup.compose.intercept.interaction/-interaction/index.html","searchKeys":["Interaction","public interface Interaction<ASSERTION extends Object, ACTION extends Object>","io.github.kakaocup.compose.intercept.interaction.Interaction"]},{"name":"public interface KDSL<T extends Object>","description":"io.github.kakaocup.compose.node.core.KDSL","location":"compose/io.github.kakaocup.compose.node.core/-k-d-s-l/index.html","searchKeys":["KDSL","public interface KDSL<T extends Object>","io.github.kakaocup.compose.node.core.KDSL"]},{"name":"public interface NodeActions","description":"io.github.kakaocup.compose.node.action.NodeActions","location":"compose/io.github.kakaocup.compose.node.action/-node-actions/index.html","searchKeys":["NodeActions","public interface NodeActions","io.github.kakaocup.compose.node.action.NodeActions"]},{"name":"public interface NodeAssertions","description":"io.github.kakaocup.compose.node.assertion.NodeAssertions","location":"compose/io.github.kakaocup.compose.node.assertion/-node-assertions/index.html","searchKeys":["NodeAssertions","public interface NodeAssertions","io.github.kakaocup.compose.node.assertion.NodeAssertions"]},{"name":"public interface TextActions","description":"io.github.kakaocup.compose.node.action.TextActions","location":"compose/io.github.kakaocup.compose.node.action/-text-actions/index.html","searchKeys":["TextActions","public interface TextActions","io.github.kakaocup.compose.node.action.TextActions"]}]
